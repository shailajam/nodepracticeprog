{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\\\\src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\",\"filename\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\\\\src\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node",
      "filename": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _databas = _interopRequireDefault(require(\"./databas\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//var express=require('express');\n//var database =require('./databas')\nvar app = (0, _express[\"default\"])();\nvar port = 3000;\napp.get('/', function (req, res) {\n  res.status(200).send(\"hiii\");\n});\napp.get('/getProduct', function (req, res) {\n  var output = _databas[\"default\"].prototype.getData('myclass');\n\n  res.send(output);\n});\napp.post('/postProduct', function (req, res) {\n  var mydata = {\n    'name': 'sai',\n    'class': 'datascience'\n  };\n\n  var output = _databas[\"default\"].prototype.postData('myclass', mydata);\n\n  res.send(output);\n});\napp.listen(port, function (err) {\n  console.log(\"Serveris running on port \".concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJwb3J0IiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwic2VuZCIsIm91dHB1dCIsImRhdGFiYXNlIiwicHJvdG90eXBlIiwiZ2V0RGF0YSIsInBvc3QiLCJteWRhdGEiLCJwb3N0RGF0YSIsImxpc3RlbiIsImVyciIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBRUE7O0FBQ0E7Ozs7QUFIQTtBQUNBO0FBSUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHLElBQWI7QUFFQUQsR0FBRyxDQUFDRSxHQUFKLENBQVEsR0FBUixFQUFZLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQ3JCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixNQUFyQjtBQUNILENBRkQ7QUFJQU4sR0FBRyxDQUFDRSxHQUFKLENBQVEsYUFBUixFQUFzQixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUMvQixNQUFJRyxNQUFNLEdBQUdDLG9CQUFTQyxTQUFULENBQW1CQyxPQUFuQixDQUEyQixTQUEzQixDQUFiOztBQUNBTixFQUFBQSxHQUFHLENBQUNFLElBQUosQ0FBU0MsTUFBVDtBQUNILENBSEQ7QUFLQVAsR0FBRyxDQUFDVyxJQUFKLENBQVMsY0FBVCxFQUF3QixVQUFDUixHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUNqQyxNQUFJUSxNQUFNLEdBQUc7QUFBQyxZQUFPLEtBQVI7QUFBYyxhQUFRO0FBQXRCLEdBQWI7O0FBQ0EsTUFBSUwsTUFBTSxHQUFHQyxvQkFBU0MsU0FBVCxDQUFtQkksUUFBbkIsQ0FBNEIsU0FBNUIsRUFBc0NELE1BQXRDLENBQWI7O0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTQyxNQUFUO0FBQ0gsQ0FKRDtBQU1BUCxHQUFHLENBQUNjLE1BQUosQ0FBV2IsSUFBWCxFQUFnQixVQUFDYyxHQUFELEVBQVM7QUFDckJDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixvQ0FBd0NoQixJQUF4QztBQUNILENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBZG1pbmlzdHJhdG9yXFxEZXNrdG9wXFxub2RlIDIwLTEyXFxvb19ub2RlXFxzcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvL3ZhciBleHByZXNzPXJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuLy92YXIgZGF0YWJhc2UgPXJlcXVpcmUoJy4vZGF0YWJhcycpXHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgZGF0YWJhc2UgZnJvbSAnLi9kYXRhYmFzJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBwb3J0ID0gMzAwMDtcclxuXHJcbmFwcC5nZXQoJy8nLChyZXEscmVzKSA9PiB7XHJcbiAgICByZXMuc3RhdHVzKDIwMCkuc2VuZChcImhpaWlcIilcclxufSk7XHJcblxyXG5hcHAuZ2V0KCcvZ2V0UHJvZHVjdCcsKHJlcSxyZXMpID0+IHtcclxuICAgIGxldCBvdXRwdXQgPSBkYXRhYmFzZS5wcm90b3R5cGUuZ2V0RGF0YSgnbXljbGFzcycpO1xyXG4gICAgcmVzLnNlbmQob3V0cHV0KVxyXG59KTtcclxuXHJcbmFwcC5wb3N0KCcvcG9zdFByb2R1Y3QnLChyZXEscmVzKSA9PiB7XHJcbiAgICB2YXIgbXlkYXRhID0geyduYW1lJzonc2FpJywnY2xhc3MnOidkYXRhc2NpZW5jZSd9XHJcbiAgICBsZXQgb3V0cHV0ID0gZGF0YWJhc2UucHJvdG90eXBlLnBvc3REYXRhKCdteWNsYXNzJyxteWRhdGEpO1xyXG4gICAgcmVzLnNlbmQob3V0cHV0KVxyXG59KTtcclxuXHJcbmFwcC5saXN0ZW4ocG9ydCwoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgU2VydmVyaXMgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKVxyXG59KTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "port",
        "get",
        "req",
        "res",
        "status",
        "send",
        "output",
        "database",
        "prototype",
        "getData",
        "post",
        "mydata",
        "postData",
        "listen",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;AAEA;;AACA;;;;AAHA;AACA;AAIA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,GAAR,EAAY,UAACC,GAAD,EAAKC,GAAL,EAAa;AACrBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,MAArB;AACH,CAFD;AAIAN,GAAG,CAACE,GAAJ,CAAQ,aAAR,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC/B,MAAIG,MAAM,GAAGC,oBAASC,SAAT,CAAmBC,OAAnB,CAA2B,SAA3B,CAAb;;AACAN,EAAAA,GAAG,CAACE,IAAJ,CAASC,MAAT;AACH,CAHD;AAKAP,GAAG,CAACW,IAAJ,CAAS,cAAT,EAAwB,UAACR,GAAD,EAAKC,GAAL,EAAa;AACjC,MAAIQ,MAAM,GAAG;AAAC,YAAO,KAAR;AAAc,aAAQ;AAAtB,GAAb;;AACA,MAAIL,MAAM,GAAGC,oBAASC,SAAT,CAAmBI,QAAnB,CAA4B,SAA5B,EAAsCD,MAAtC,CAAb;;AACAR,EAAAA,GAAG,CAACE,IAAJ,CAASC,MAAT;AACH,CAJD;AAMAP,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAgB,UAACc,GAAD,EAAS;AACrBC,EAAAA,OAAO,CAACC,GAAR,oCAAwChB,IAAxC;AACH,CAFD",
      "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
      "sourcesContent": [
        "//var express=require('express');\r\n//var database =require('./databas')\r\nimport express from 'express';\r\nimport database from './databas'\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.get('/',(req,res) => {\r\n    res.status(200).send(\"hiii\")\r\n});\r\n\r\napp.get('/getProduct',(req,res) => {\r\n    let output = database.prototype.getData('myclass');\r\n    res.send(output)\r\n});\r\n\r\napp.post('/postProduct',(req,res) => {\r\n    var mydata = {'name':'sai','class':'datascience'}\r\n    let output = database.prototype.postData('myclass',mydata);\r\n    res.send(output)\r\n});\r\n\r\napp.listen(port,(err) => {\r\n    console.log(`Serveris running on port ${port}`)\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576836580855
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\\\\src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\",\"filename\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\\\\src\\\\databas.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\node 20-12\\\\oo_node\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node",
      "filename": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\databas.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\databas.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src\\databas.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
        "sourceFileName": "databas.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongodb = require('mongodb');\n\nvar MongoClient = mongodb.MongoClient;\nvar url = \"mongodb://localhost:27017\";\nvar dbname = \"student\";\n\nvar maincall = function maincall(myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(dbname);\n    dbo.collection('myclass').insertMany(myObj, function (err) {\n      if (err) throw err;\n      console.log('Data Inserted');\n      db.close();\n    });\n  });\n}; //Getting Data\n\n\nvar out;\n\nmaincall.prototype.getData = function (colName) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(dbname);\n    dbo.collection(colName).find({}).toArray(function (err, result) {\n      if (err) throw err;\n      console.log('Data fetched');\n      out = result;\n    });\n  });\n  return out;\n}; // Insert Data\n\n\nmaincall.prototype.postData = function (colName, myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(dbname);\n    dbo.collection(colName).insertOne(myObj, function (err, result) {\n      if (err) throw err;\n      db.close();\n    });\n  });\n  var out = \"Data inserted\";\n  return out;\n}; //Update Data\n\n\nmaincall.prototype.updateData = function (colName, query, myObj) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(dbname);\n    dbo.collection(colName).update(query, myObj, function (err, result) {\n      if (err) throw err;\n      db.close();\n    });\n  });\n  var out = \"Data updated\";\n  return out;\n}; //Delete Data\n\n\nmaincall.prototype.updateData = function (colName, query) {\n  MongoClient.connect(url, function (err, db) {\n    if (err) throw err;\n    var dbo = db.db(dbname);\n    dbo.collection(colName).deleteOne(query, function (err, result) {\n      if (err) throw err;\n      db.close();\n    });\n  });\n  var out = \"Data Deleted\";\n  return out;\n};\n\nmodule.exports = maincall;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXMuanMiXSwibmFtZXMiOlsibW9uZ29kYiIsInJlcXVpcmUiLCJNb25nb0NsaWVudCIsInVybCIsImRibmFtZSIsIm1haW5jYWxsIiwibXlPYmoiLCJjb25uZWN0IiwiZXJyIiwiZGIiLCJkYm8iLCJjb2xsZWN0aW9uIiwiaW5zZXJ0TWFueSIsImNvbnNvbGUiLCJsb2ciLCJjbG9zZSIsIm91dCIsInByb3RvdHlwZSIsImdldERhdGEiLCJjb2xOYW1lIiwiZmluZCIsInRvQXJyYXkiLCJyZXN1bHQiLCJwb3N0RGF0YSIsImluc2VydE9uZSIsInVwZGF0ZURhdGEiLCJxdWVyeSIsInVwZGF0ZSIsImRlbGV0ZU9uZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQ0EsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxJQUFNQyxXQUFXLEdBQUdGLE9BQU8sQ0FBQ0UsV0FBNUI7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMkJBQVo7QUFDQSxJQUFJQyxNQUFNLEdBQUUsU0FBWjs7QUFFQSxJQUFNQyxRQUFRLEdBQUUsU0FBVkEsUUFBVSxDQUFDQyxLQUFELEVBQVc7QUFDdkJKLEVBQUFBLFdBQVcsQ0FBQ0ssT0FBWixDQUFvQkosR0FBcEIsRUFBd0IsVUFBQ0ssR0FBRCxFQUFLQyxFQUFMLEVBQVk7QUFDaEMsUUFBR0QsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUixRQUFJRSxHQUFHLEdBQUVELEVBQUUsQ0FBQ0EsRUFBSCxDQUFNTCxNQUFOLENBQVQ7QUFDQU0sSUFBQUEsR0FBRyxDQUFDQyxVQUFKLENBQWUsU0FBZixFQUEwQkMsVUFBMUIsQ0FBcUNOLEtBQXJDLEVBQTRDLFVBQUNFLEdBQUQsRUFBUTtBQUNoRCxVQUFHQSxHQUFILEVBQVEsTUFBTUEsR0FBTjtBQUNSSyxNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ0FMLE1BQUFBLEVBQUUsQ0FBQ00sS0FBSDtBQUNILEtBSkQ7QUFL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QUFDbEIsR0FBRCxFQUFLYyxNQUFMLEVBQWU7QUFDcEQsVUFBR2QsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUkMsTUFBQUEsRUFBRSxDQUFDTSxLQUFIO0FBQ0gsS0FIRDtBQUlILEdBUEQ7QUFRQSxNQUFJQyxHQUFHLEdBQUcsY0FBVjtBQUNBLFNBQU9BLEdBQVA7QUFDSCxDQVhEOztBQWFBYSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ6QixRQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFkbWluaXN0cmF0b3JcXERlc2t0b3BcXG5vZGUgMjAtMTJcXG9vX25vZGVcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5jb25zdCBtb25nb2RiID0gcmVxdWlyZSgnbW9uZ29kYicpO1xyXG5jb25zdCBNb25nb0NsaWVudCA9IG1vbmdvZGIuTW9uZ29DbGllbnQ7XHJcbmNvbnN0IHVybCA9IFwibW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxN1wiO1xyXG52YXIgZGJuYW1lID1cInN0dWRlbnRcIlxyXG5cclxuY29uc3QgbWFpbmNhbGw9IChteU9iaikgPT4ge1xyXG4gICAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsKGVycixkYikgPT4ge1xyXG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgIHZhciBkYm89IGRiLmRiKGRibmFtZSk7XHJcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oJ215Y2xhc3MnKS5pbnNlcnRNYW55KG15T2JqLCAoZXJyKSA9PntcclxuICAgICAgICAgICAgaWYoZXJyKSB0aHJvdyBlcnI7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEYXRhIEluc2VydGVkJyk7XHJcbiAgICAgICAgICAgIGRiLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn1cclxuXHJcbi8vR2V0dGluZyBEYXRhXHJcbnZhciBvdXQ7XHJcbm1haW5jYWxsLnByb3RvdHlwZS5nZXREYXRhID0gKGNvbE5hbWUpID0+IHtcclxuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLChlcnIsZGIpID0+IHtcclxuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICB2YXIgZGJvPSBkYi5kYihkYm5hbWUpO1xyXG4gICAgICAgIGRiby5jb2xsZWN0aW9uKGNvbE5hbWUpLmZpbmQoe30pLnRvQXJyYXkoKGVycixyZXN1bHQpID0+e1xyXG4gICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ0RhdGEgZmV0Y2hlZCcpO1xyXG4gICAgICAgICAgIG91dCA9IHJlc3VsdDtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbiAgICByZXR1cm4gb3V0O1xyXG59XHJcblxyXG4vLyBJbnNlcnQgRGF0YVxyXG5tYWluY2FsbC5wcm90b3R5cGUucG9zdERhdGEgPSAoY29sTmFtZSxteU9iaikgPT4ge1xyXG4gICAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmwsKGVycixkYikgPT4ge1xyXG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgIHZhciBkYm89IGRiLmRiKGRibmFtZSk7XHJcbiAgICAgICAgZGJvLmNvbGxlY3Rpb24oY29sTmFtZSkuaW5zZXJ0T25lKG15T2JqLCAoZXJyLHJlc3VsdCkgPT57XHJcbiAgICAgICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xyXG4gICAgICAgICAgICBkYi5jbG9zZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgbGV0IG91dCA9IFwiRGF0YSBpbnNlcnRlZFwiXHJcbiAgICByZXR1cm4gb3V0O1xyXG59XHJcblxyXG4vL1VwZGF0ZSBEYXRhXHJcbm1haW5jYWxsLnByb3RvdHlwZS51cGRhdGVEYXRhID0gKGNvbE5hbWUscXVlcnksbXlPYmopID0+IHtcclxuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLChlcnIsZGIpID0+IHtcclxuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICB2YXIgZGJvPSBkYi5kYihkYm5hbWUpO1xyXG4gICAgICAgIGRiby5jb2xsZWN0aW9uKGNvbE5hbWUpLnVwZGF0ZShxdWVyeSxteU9iaiwgKGVycixyZXN1bHQpID0+e1xyXG4gICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICAgICAgZGIuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuICAgIGxldCBvdXQgPSBcIkRhdGEgdXBkYXRlZFwiXHJcbiAgICByZXR1cm4gb3V0O1xyXG59XHJcblxyXG4vL0RlbGV0ZSBEYXRhXHJcbm1haW5jYWxsLnByb3RvdHlwZS51cGRhdGVEYXRhID0gKGNvbE5hbWUscXVlcnkpID0+IHtcclxuICAgIE1vbmdvQ2xpZW50LmNvbm5lY3QodXJsLChlcnIsZGIpID0+IHtcclxuICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICB2YXIgZGJvPSBkYi5kYihkYm5hbWUpO1xyXG4gICAgICAgIGRiby5jb2xsZWN0aW9uKGNvbE5hbWUpLmRlbGV0ZU9uZShxdWVyeSwgKGVycixyZXN1bHQpID0+e1xyXG4gICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcclxuICAgICAgICAgICAgZGIuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuICAgIGxldCBvdXQgPSBcIkRhdGEgRGVsZXRlZFwiXHJcbiAgICByZXR1cm4gb3V0O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IG1haW5jYWxsOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "databas.js"
      ],
      "names": [
        "mongodb",
        "require",
        "MongoClient",
        "url",
        "dbname",
        "maincall",
        "myObj",
        "connect",
        "err",
        "db",
        "dbo",
        "collection",
        "insertMany",
        "console",
        "log",
        "close",
        "out",
        "prototype",
        "getData",
        "colName",
        "find",
        "toArray",
        "result",
        "postData",
        "insertOne",
        "updateData",
        "query",
        "update",
        "deleteOne",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Administrator\\Desktop\\node 20-12\\oo_node\\src",
      "sourcesContent": [
        "\r\nconst mongodb = require('mongodb');\r\nconst MongoClient = mongodb.MongoClient;\r\nconst url = \"mongodb://localhost:27017\";\r\nvar dbname =\"student\"\r\n\r\nconst maincall= (myObj) => {\r\n    MongoClient.connect(url,(err,db) => {\r\n        if(err) throw err;\r\n        var dbo= db.db(dbname);\r\n        dbo.collection('myclass').insertMany(myObj, (err) =>{\r\n            if(err) throw err;\r\n            console.log('Data Inserted');\r\n            db.close();\r\n        })\r\n    })\r\n}\r\n\r\n//Getting Data\r\nvar out;\r\nmaincall.prototype.getData = (colName) => {\r\n    MongoClient.connect(url,(err,db) => {\r\n        if(err) throw err;\r\n        var dbo= db.db(dbname);\r\n        dbo.collection(colName).find({}).toArray((err,result) =>{\r\n            if(err) throw err;\r\n            console.log('Data fetched');\r\n           out = result;\r\n        })\r\n    })\r\n\r\n    return out;\r\n}\r\n\r\n// Insert Data\r\nmaincall.prototype.postData = (colName,myObj) => {\r\n    MongoClient.connect(url,(err,db) => {\r\n        if(err) throw err;\r\n        var dbo= db.db(dbname);\r\n        dbo.collection(colName).insertOne(myObj, (err,result) =>{\r\n            if(err) throw err;\r\n            db.close();\r\n        })\r\n    })\r\n    let out = \"Data inserted\"\r\n    return out;\r\n}\r\n\r\n//Update Data\r\nmaincall.prototype.updateData = (colName,query,myObj) => {\r\n    MongoClient.connect(url,(err,db) => {\r\n        if(err) throw err;\r\n        var dbo= db.db(dbname);\r\n        dbo.collection(colName).update(query,myObj, (err,result) =>{\r\n            if(err) throw err;\r\n            db.close();\r\n        })\r\n    })\r\n    let out = \"Data updated\"\r\n    return out;\r\n}\r\n\r\n//Delete Data\r\nmaincall.prototype.updateData = (colName,query) => {\r\n    MongoClient.connect(url,(err,db) => {\r\n        if(err) throw err;\r\n        var dbo= db.db(dbname);\r\n        dbo.collection(colName).deleteOne(query, (err,result) =>{\r\n            if(err) throw err;\r\n            db.close();\r\n        })\r\n    })\r\n    let out = \"Data Deleted\"\r\n    return out;\r\n}\r\n\r\nmodule.exports = maincall;"
      ]
    },
    "sourceType": "script",
    "mtime": 1576833871040
  }
}